// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
  engineType    = "library"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Company {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  Purchase Purchase[]
}

model Customer {
  id   Int    @id @default(autoincrement())
  name String @unique
  Sale Sale[]
}

model Family {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  Product Product[]
}

model Product {
  id              Int               @id @default(autoincrement())
  code            String
  name            String
  costPrice       Decimal
  salePrice       Decimal
  imageUrl        String
  alertQuantity   Int
  expirationDate  DateTime
  familyId        Int
  unitId          Int
  created         DateTime          @default(now())
  updated         DateTime          @default(now())
  family          Family            @relation(fields: [familyId], references: [id])
  unit            Unit              @relation(fields: [unitId], references: [id])
  ProductPurchase ProductPurchase[]
  ProductSale     ProductSale[]
  Stock           Stock[]
}

model ProductPurchase {
  id            Int      @id @default(autoincrement())
  productId     Int
  purchaseId    Int
  amount        Decimal
  price         Decimal
  untaxedAmount Decimal
  taxes         Decimal
  subTotal      Decimal
  created       DateTime @default(now())
  updated       DateTime @default(now())
  product       Product  @relation(fields: [productId], references: [id])
  purchase      Purchase @relation(fields: [purchaseId], references: [id])
}

model ProductSale {
  id            Int      @id @default(autoincrement())
  productId     Int
  saleId        Int
  amount        Decimal
  price         Decimal
  untaxedAmount Decimal
  taxes         Decimal
  subTotal      Decimal
  created       DateTime @default(now())
  updated       DateTime @default(now())
  product       Product  @relation(fields: [productId], references: [id])
  sale          Sale     @relation(fields: [saleId], references: [id])
}

model Purchase {
  id                 Int               @id @default(autoincrement())
  code               String
  date               DateTime          @default(now())
  companyId          Int
  totalPrice         Decimal
  totalUntaxedAmount Decimal
  totalTaxes         Decimal
  created            DateTime          @default(now())
  updated            DateTime          @default(now())
  company            Company           @relation(fields: [companyId], references: [id])
  ProductPurchase    ProductPurchase[]
}

model Sale {
  id                 Int           @id @default(autoincrement())
  code               String
  date               DateTime      @default(now())
  customerId         Int
  totalPrice         Decimal
  totalUntaxedAmount Decimal
  totalTaxes         Decimal
  created            DateTime      @default(now())
  updated            DateTime      @default(now())
  customer           Customer      @relation(fields: [customerId], references: [id])
  ProductSale        ProductSale[]
}

model Stock {
  id        Int      @id @default(autoincrement())
  productId Int
  amount    Int
  created   DateTime @default(now())
  updated   DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model Unit {
  id      Int       @id @default(autoincrement())
  name    String
  created DateTime  @default(now())
  updated DateTime  @default(now())
  Product Product[]
}

